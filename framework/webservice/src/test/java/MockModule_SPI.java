/***************************************************************/
/* This class was generated by ds-to-spi-annotations-processor */
/***************************************************************/

public class MockModule_SPI
       extends MockModule
       implements org.daisy.common.spi.ServiceWithProperties
                , org.daisy.common.spi.CreateOnStart {
	
	private static final org.slf4j.Logger spi_log = org.slf4j.LoggerFactory.getLogger(MockModule_SPI.class);
	
	private final java.util.Map spi_props;
	
	public MockModule_SPI() {
		super();
		spi_log.trace("Creating MockModule");
		spi_props = new java.util.HashMap();
		{
			spi_log.trace("Binding org.daisy.pipeline.xmlcatalog.XmlCatalogParser services...");
			// cardinality: 1..1
			int minRef = 1;
			int maxRef = 1;
			int refCount = 0;
			try {
				java.util.Iterator<org.daisy.pipeline.xmlcatalog.XmlCatalogParser> services
					= org.daisy.common.spi.ServiceLoader.load(org.daisy.pipeline.xmlcatalog.XmlCatalogParser.class).iterator();
				while (services.hasNext()) {
					try {
						org.daisy.pipeline.xmlcatalog.XmlCatalogParser service = services.next();
						setParser(service);
						refCount++;
						if (maxRef > 0 && refCount == maxRef)
							break;
					} catch (Throwable e) {
						spi_log.error("Error while binding org.daisy.pipeline.xmlcatalog.XmlCatalogParser service", e);
					}
				}
			} catch (Throwable e) {
				spi_log.error("Error while binding org.daisy.pipeline.xmlcatalog.XmlCatalogParser services", e);
			}
			if (refCount < minRef) {
				spi_log.warn("No org.daisy.pipeline.xmlcatalog.XmlCatalogParser found");
				throw new RuntimeException("No org.daisy.pipeline.xmlcatalog.XmlCatalogParser found");
			} else {
				spi_log.trace("Bound " + refCount + " org.daisy.pipeline.xmlcatalog.XmlCatalogParser services.");
			}
		}
	}
	
	public java.util.Map spi_getProperties() {
		return spi_props;
	}
}
